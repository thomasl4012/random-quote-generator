{"version":3,"sources":["components/button/button.component.jsx","components/quote/quoteblock.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Button","children","colors","otherProps","style","backgroundColor","className","QuoteBlock","handleClick","text","author","icon","faQuoteLeft","onClick","App","state","data","colorRandom","axios","get","then","response","setState","quotes","Math","floor","random","length","document","body","catch","error","console","log","this","color","map","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"iXAceA,EAZA,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,OAAWC,EAAiB,qCACtD,OACE,6CACEC,MAAO,CAAEC,gBAAgB,GAAD,OAAKH,IAC7BI,UAAU,SACNH,GAHN,aAKGF,MCeQM,EAnBI,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,OAAQR,EAAa,EAAbA,OAC/C,OACE,sBAAKI,UAAU,YAAf,UACE,sBAAKA,UAAU,QAAf,UACE,cAAC,IAAD,CAAiBK,KAAMC,MADzB,eAEqBH,KAErB,sBAAKH,UAAU,SAAf,eACKI,EACH,qBAAKJ,UAAU,SAAf,SACE,cAAC,EAAD,CAAQO,QAASL,EAAaN,OAAQA,EAAtC,gCCVWY,E,4MACnBC,MAAQ,CACNC,KAAM,GACNd,OAAQ,CACN,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEFe,YAAa,W,EAgBfT,YAAc,WACZU,IACGC,IAAI,4DACJC,MAAK,SAACC,GACL,EAAKC,SAAS,CACZN,KAAMK,EAASL,KAAKO,OACpBN,YAAa,EAAKF,MAAMb,OACtBsB,KAAKC,MAAMD,KAAKE,SAAW,EAAKX,MAAMb,OAAOyB,WAGjDC,SAASC,KAAKzB,MAAMC,gBAAkB,EAAKU,MAAME,eAElDa,OAAM,SAAUC,GACfC,QAAQC,IAAIF,O,uDA1BlB,WAAqB,IAAD,OAClBH,SAASC,KAAKzB,MAAMC,gBAAkB6B,KAAKnB,MAAME,YAEjDC,IACGC,IAAI,4DACJC,MAAK,SAACC,GACL,EAAKC,SAAS,CAAEN,KAAMK,EAASL,KAAKO,YAErCO,OAAM,SAAUC,GACfC,QAAQC,IAAIF,Q,oBAqBlB,WAAU,IAAD,OACP,OACE,qBACE3B,MAAO,CACL+B,MAAM,GAAD,OAAKD,KAAKnB,MAAME,cAFzB,SAKGiB,KAAKnB,MAAMC,KAAKoB,KAAI,gBAAG3B,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,OACnB,cAAC,EAAD,CACEF,YAAa,EAAKA,YAClBC,KAAMA,EACNC,OAAQA,EACRR,OAAQ,EAAKa,MAAME,uB,GA9DEoB,aCOlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpB,SAASqB,eAAe,SAM1BX,M","file":"static/js/main.1fccdbfc.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./button.style.css\";\nconst Button = ({ children, colors, ...otherProps }) => {\n  return (\n    <div\n      style={{ backgroundColor: `${colors}` }}\n      className=\"input\"\n      {...otherProps}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport \"./quoteblock.style.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faQuoteLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport Button from \"../button/button.component\";\nconst QuoteBlock = ({ handleClick, text, author, colors }) => {\n  return (\n    <div className=\"container\">\n      <div className=\"quote\">\n        <FontAwesomeIcon icon={faQuoteLeft} />\n        &nbsp;&nbsp;&nbsp;{text}\n      </div>\n      <div className=\"author\">\n        - {author}\n        <div className=\"button\">\n          <Button onClick={handleClick} colors={colors}>\n            New quote\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default QuoteBlock;\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport QuoteBlock from \"./components/quote/quoteblock.component\";\n\nexport default class App extends Component {\n  state = {\n    data: [],\n    colors: [\n      \"#16a085\",\n      \"#27ae60\",\n      \"#2c3e50\",\n      \"#f39c12\",\n      \"#e74c3c\",\n      \"#9b59b6\",\n      \"#FB6964\",\n      \"#342224\",\n      \"#472E32\",\n      \"#BDBB99\",\n      \"#77B1A9\",\n      \"#73A857\",\n    ],\n    colorRandom: \"#73A857\",\n  };\n\n  componentDidMount() {\n    document.body.style.backgroundColor = this.state.colorRandom;\n\n    axios\n      .get(\"https://goquotes-api.herokuapp.com/api/v1/random?count=1\")\n      .then((response) => {\n        this.setState({ data: response.data.quotes });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  handleClick = () => {\n    axios\n      .get(\"https://goquotes-api.herokuapp.com/api/v1/random?count=1\")\n      .then((response) => {\n        this.setState({\n          data: response.data.quotes,\n          colorRandom: this.state.colors[\n            Math.floor(Math.random() * this.state.colors.length)\n          ],\n        });\n        document.body.style.backgroundColor = this.state.colorRandom;\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          color: `${this.state.colorRandom}`,\n        }}\n      >\n        {this.state.data.map(({ text, author }) => (\n          <QuoteBlock\n            handleClick={this.handleClick}\n            text={text}\n            author={author}\n            colors={this.state.colorRandom}\n          />\n        ))}\n        {/* {this.state.data.map(({ ...props }) => (\n          \n        ))} */}\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}